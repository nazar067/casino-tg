from aiogram.types import Message
from aiogram import Router
from user.transactions import get_user_transactions
from localisation.check_language import check_language
from localisation.translations.finance import translations as finance_translation

router = Router()

async def history_handler(message: Message, pool):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ò—Å—Ç–æ—Ä–∏—è" –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id = message.from_user.id
    user_language = await check_language(pool, message.chat.id)

    # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    transactions = await get_user_transactions(pool, user_id)

    if not transactions:
        # –ï—Å–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.reply(finance_translation["no_transactions"][user_language])
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    history_message = "\n".join(
        f"üí≥ ID: {transaction['transaction_id']}, "
        f"–°—É–º–º–∞: {transaction['amount']} ‚≠êÔ∏è, "
        f"–ó–∞–∫—Ä—ã—Ç–∞: {'–î–∞' if transaction['is_closed'] else '–ù–µ—Ç'}, "
        f"–í—Ä–µ–º—è: {transaction['timestamp']}"
        for transaction in transactions
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    await message.reply(
        finance_translation["history_msg"][user_language].format(history=history_message)
    )
